<?php

namespace Home\Model;
use Think\Model;


/**
 * {0}
 * 
 * @author
 * @version 
 */
class UserModel extends Model
{

	/**
	 * The default action - show the home page
	 */
//     /* 用户模型自动验证 */
//     protected $_validate = array(
//         /* 验证用户名 */
//         array('username', '1,30', -1, self::EXISTS_VALIDATE, 'length'), //用户名长度不合法
//         array('username', 'checkDenyMember', -2, self::EXISTS_VALIDATE, 'callback'), //用户名禁止注册
//         array('username', '', -3, self::EXISTS_VALIDATE, 'unique'), //用户名被占用
    
//         /* 验证密码 */
//         array('password', '6,30', -4, self::EXISTS_VALIDATE, 'length'), //密码长度不合法
    
//         /* 验证邮箱 */
//         array('email', 'email', -5, self::EXISTS_VALIDATE), //邮箱格式不正确
//         array('email', '1,32', -6, self::EXISTS_VALIDATE, 'length'), //邮箱长度不合法
//         array('email', 'checkDenyEmail', -7, self::EXISTS_VALIDATE, 'callback'), //邮箱禁止注册
//         array('email', '', -8, self::EXISTS_VALIDATE, 'unique'), //邮箱被占用
    
//         /* 验证手机号码 */
//         array('mobile', '//', -9, self::EXISTS_VALIDATE), //手机格式不正确 TODO:
//         array('mobile', 'checkDenyMobile', -10, self::EXISTS_VALIDATE, 'callback'), //手机禁止注册
//         array('mobile', '', -11, self::EXISTS_VALIDATE, 'unique'), //手机号被占用
//     );
    
//     /* 用户模型自动完成 */
//     protected $_auto = array(
//         array('password', 'think_ucenter_md5', self::MODEL_BOTH, 'function', UC_AUTH_KEY),
//         array('reg_time', NOW_TIME, self::MODEL_INSERT),
//         array('reg_ip', 'get_client_ip', self::MODEL_INSERT, 'function', 1),
//         array('update_time', NOW_TIME),
//         array('status', 'getStatus', self::MODEL_BOTH, 'callback'),
//     );
    
    /**
     * 注册一个新用户
     * @param  string $username 用户名
     * @param  string $password 用户密码
     * @param  string $email    用户邮箱
     * @param  string $mobile   用户手机号码
     * @return integer          注册成功-用户信息，注册失败-错误编号
     */
    public function register($username, $password){
        $data = array(
            'username' => $username,
            'password' => $password,
            'update_time'=>time(),
            'create_time'=>time(),
        );
//         //验证手机
//         if(empty($data['mobile'])) unset($data['mobile']);
        /* 添加用户 */
        if($this->create($data)){
            $uid = $this->add();
            return $uid ? $uid : 0; //0-未知错误，大于0-注册成功
        } else {
            return $this->getError(); //错误详情见自动验证注释
        }
    }
    /**
     * 检测用户名是不是被禁止注册
     * @param  string $username 用户名
     * @return boolean          ture - 未禁用，false - 禁止注册
     */
    protected function checkDenyMember($username){
        return true; //TODO: 暂不限制，下一个版本完善
    }
    
    
    
    /**
     * 用户登录认证
     * @param  string  $username 用户名
     * @param  string  $password 用户密码
     * @param  integer $type     用户名类型 （1-用户名，2-邮箱，3-手机，4-UID）
     * @return integer           登录成功-用户ID，登录失败-错误编号
     */
    public function login($username, $password, $type = 1){
        $map = array();
        switch ($type) {
            case 1:
                $map['username'] = $username;
                break;
            case 2:
                $map['email'] = $username;
                break;
            case 3:
                $map['mobile'] = $username;
                break;
            case 4:
                $map['id'] = $username;
                break;
            default:
                return 0; //参数错误
        }
    
        /* 获取用户数据 */
        $user = $this->where($map)->find();
        if(is_array($user) ){
            /* 验证用户密码 */
            if(md5($password) == md5($user['password'])){
                $this->updateLogin($user['id']); //更新用户登录信息
                return $user; //登录成功，返回用户ID
            } else {
                return -2; //密码错误
            }
        } else {
            return -1; //用户不存在或被禁用
        }
    }
    
    function updatePwd(){
        $data=array(
            'password' =>md5($_POST['npass']),
        );
        /* 更新用户 */
        if($this->create($data)){
            $map["id"]=$_POST['uid'];
            $uid = $this->where($map)->save($data);
            return $uid ;
        } else {
            return $this->getError(); //错误详情见自动验证注释
        }
        
    }
    //更新登陆信息
    function updateLogin($userid){
        
        
        
    }
    
    
    
    
}